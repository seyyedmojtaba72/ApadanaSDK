apply plugin: 'com.android.library'

def _bintrayRepo = "maven"
def _bintrayName = "apadana-sdk-android"
def _publishedGroupId = "com.github.seyyedmojtaba72"
def _libraryName = "ApadanaSDK-Android"
def _artifact = _bintrayName
def _libraryDescription = "Apadana CMS SDK for Android SDK"

def _siteUrl = 'https://github.com/seyyedmojtaba72/ApadanaSDK-Android'      // Homepage URL of the library
def _gitUrl = 'git@github.com:seyyedmojtaba72/ApadanaSDK-Android.git'   // Git repository URL

def _libraryVersion = "1.0.2"
def _libraryVersionCode = 3

def _developerId = "seyyedmojtaba72"
def _developerName = "SeyyedMojtaba Akramzade"
def _developerEmail = "akramzade72@gmail.com"
def _licenseName = 'The Apache Software License, Version 2.0'
def _licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
def _allLicenses = ["Apache-2.0"]

///////

def _PUBLISH_GROUP_ID = _publishedGroupId
def _PUBLISH_ARTIFACT_ID = _bintrayName
def _PUBLISH_VERSION = _libraryVersion

////////

def _versionName = _libraryVersion
def _versionCode = _libraryVersionCode

///////////

ext {
    bintrayRepo = _bintrayRepo
    bintrayName = _bintrayName

    publishedGroupId = _publishedGroupId
    libraryName = _libraryName
    artifact = _artifact

    libraryDescription = _libraryDescription

    siteUrl = _siteUrl
    gitUrl = _gitUrl

    libraryVersion = _libraryVersion

    developerId = _developerId
    developerName = _developerName
    developerEmail = _developerEmail

    licenseName = _licenseName
    licenseUrl = _licenseUrl
    allLicenses = _allLicenses

    //////

    PUBLISH_GROUP_ID = _PUBLISH_GROUP_ID
    PUBLISH_ARTIFACT_ID = _PUBLISH_ARTIFACT_ID
    PUBLISH_VERSION = _PUBLISH_VERSION
}



android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode _versionCode
        versionName _versionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false // IMPORTANT
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenCentral()
    maven { url 'https://maven.google.com' }
    maven { url 'http://dl.bintray.com/gigamole/maven/' }
    maven { url 'https://jitpack.io' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    google()
}

dependencies{
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //compile 'com.android.support:support-annotations:25.3.1'
    implementation 'com.android.support:design:27.0.1'
//    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.seyyedmojtaba72:android-utils:2.1.8@aar'
    implementation 'com.mcxiaoke.volley:library:1.0.19'
    //testCompile 'junit:junit:4.12'
}


/*task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', 'com.developars.utils-android.jar')
    into('release/') //you can change this directory where you want to copy your .jar
}

task clearJar(type: Delete) {
    delete 'build/libs/com.developars.utils-android.jar'
}*/


apply from: 'installv1.gradle'
apply from: 'bintrayv1.gradle'

///////

//apply from: 'android-release-aar.gradle'